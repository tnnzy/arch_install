Indicaciones para el editor de texto nano en esta guia
Ctrl + w (buscar palabra hacia adelante)
Alt + 6  (copiar la linea actual)
Ctrl + u (pegar la linea copiada)
Ctrl + o (guardar los cambios realizados)
Ctrl + x (salir de nano)


Guia de Instalación de Arch Linux UEFI GRUB 

0.0 Para live cd 
0.1 mount -o remount,size=2G /run/archiso/cowspace

1-  La distribucion de teclado por defecto es US
1.1 loadkeys es (Para españa)
1.2 localectl list-keymaps (Para todos los teclados disponibles en el iso de Arch Linux)
1.3 localectl list-keymaps | grep -i codigo (En codigo deben poner el de vuestro pais o lenguaje)
1.4 ls /usr/share/kbd/keymaps/i386/**/*.map.gz | less
** To modify the layout, append a corresponding file name to loadkeys, UK for example:
1.5loadkeys uk.map.gz

2-  Verificar el modo de arranque
2.1 ls /sys/firmware/efi/efivars
2.2 Si hay directorios el sistema esta en MODO UEFI
2.3 Si no existen directorios el sistema esta en MODO BIOS o CSM 

3-  Conectar a Internet
3.1 ip link
3.2 ping -c 3 archlinux.org
3.3 wifi-menu (Programa grafico para conectarse a una red wifi)

4-  Actualizar el reloj del sistema
4.1 timedatectl set-ntp true

5-  Partición de discos
5.1 fdisk -l (ver todos los discos que esta conectados en el portatil)  ( sda en mi caso )
5.2 fdisk /dev/sda (sda/sdx/nvme)(disco seleccionado para crear una tabla de particiones)
5.3 p (ver particiones existentes)
5.4 g (crear particion GPT limpia)
5.5 n (crear nueva particion)(creamos 3 particiones: UEFI de 512M, root de 50G y home espacio restante)
5.6 t (tipo de particion)(UEFI=1, root=24, home=20)
5.7 p (para confirmar las particiones creadas recientemente)(sda1, sda2, sda3)
5.8 w (guardar todos los cambios realizados)

6-  Formatear las particiones
6.1 mkfs.fat -F32 /dev/sda1 (UEFI)
6.2 mkfs.ext4 /dev/sda2 (root)
6.3 mkfs.ext4 /dev/sda3 (home)

7-  Crear carpetas y montar particiones del sistema
7.1 mount /dev/sda2 /mnt
7.2 mkdir /mnt/home
7.3 mount /dev/sda3 /mnt/home
7.4 mkdir -p /mnt/boot/efi
7.5 mount /dev/sda1 /mnt/boot/efi
7.6 lsblk (para ver que todo esta correcto)

8-  Seleccionar los mirrors de descarga adecuados para una instalación mas rapida.
8.1 nano /etc/pacman.d/mirrorlist 
8.2 Presionar (ctrl + w) ponemos el nombre del pais en el que estamos o pais cercano.
8.3 ponemos el cursor debajo del pais en el principio de la linea llamada server, y copiamos con ( alt + 6 )
8.4 Vamos al principio donde comienzan los paices y colocamos el nuestro ejemplo:(##Sweden) 
8.5 justo debajo del pais que hemos puesto pegamos con ( ctrl + u ) para agregar la fila server de antes.
8.6 pacman -Syy (actualizar solo mirrors)
8.7 pacman -Sy reflector
8.8 reflector --verbose --latest 5 --sort rate --save /etc/pacman.d/mirrorlist

9-  Instalar el sistema base
9.1 pacstrap -i /mnt base base-devel linux linux-firmware nano networkmanager grub efibootmgr os-prober ntfs-3g 
xdg-user-dirs xf86-input-synaptics

10-  Configurar el sistema
10.1 genfstab -U /mnt >> /mnt/etc/fstab (definir como se deben montar las particiones en el sistema)
10.2 cat /mnt/etc/fstab (verificar el comando anterior)
10.3 arch-chroot /mnt (entrar en el nuevo sistema)

11-  Zona horaria
11.1 ln -sf /usr/share/zoneinfo/ (presionar ( Tab ) para ver todas las zonas horarias existentes)
11.2 ln -sf /usr/share/zoneinfo/Europe/Madrid /etc/localtime (en mi caso)

12-  Hora local
12.1 hwclock --systohc --utc 

13-  Localización
13.1 nano /etc/locale.gen (buscamos nuestro pais o region) y suprimimos # para activarlo.
13.2 locale-gen (actualizar)
13.2 echo LANG=en_US.UTF-8 > /etc/locale.conf (preferencias de localización)

14-  Configuración de red
14.1 echo roarch > /etc/hostname (nombre del portatil ejemplo: roarch)
14.2 nano /etc/hosts (añadir el nombre al archivo hosts)
14.3 127.0.1.1 localhost.localdomain roarch

15-  Contraseña root
15.1 passwd (poner la contraseña root deseada)

16-  Crear usuario
16.1 useradd -m -G sys,log,network,floppy,scanner,power,rfkill,users,video,storage,optical,lp,audio,wheel,adm -s /bin/bash rolin
16.2 passwd rolin 
16.3 EDITOR=nano visudo (habilitar privilegios de administrador al usuario)
16.4 suprimir # en %wheel ALL=(ALL) ALL

17-  Boot loader ( GRUB )
17.1 lsblk
17.2 grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=GRUB --recheck
17.3 grub-mkconfig -o /boot/grub/grub.cfg
17.4 sudo mkdir /boot/efi/EFI/BOOT
17.5 sudo cp /boot/efi/EFI/GRUB/grubx64.efi /boot/efi/EFI/BOOT/BOOTX64.EFI

18-  Instalar escritorio plasma
18.1 pacman -S pulseaudio pulseaudio-alsa xorg xorg-xinit xorg-server xorg-xkill xterm mesa

General
pacman -Sy --needed linux-lts-headers dkms p7zip archiso haveged pacman-contrib pkgfile git diffutils jfsutils reiserfsprogs btrfs-progs f2fs-tools logrotate man-db man-pages mdadm perl s-nail texinfo which xfsprogs lsscsi sdparm sg3_utils smartmontools fuse2 fuse3 ntfs-3g exfat-utils gvfs gvfs-afc gvfs-goa gvfs-gphoto2 gvfs-mtp gvfs-nfs gvfs-smb unrar unzip unace xz xdg-user-dirs xscreensaver grsync ddrescue dd_rescue hdparm htop rsync hardinfo bash-completion lsb-release polkit ufw packagekit

18.2 pacman -Sy --needed pulseaudio vlc cdrtools gstreamer gst-libav gst-plugins-base gst-plugins-base-libs gst-plugins-good gst-plugins-bad gst-plugins-ugly gstreamer-vaapi gst-transcoder xvidcore frei0r-plugins cdrdao dvdauthor transcode alsa-utils alsa-plugins alsa-firmware pulseaudio-alsa pulseaudio-equalizer pulseaudio-jack ffmpeg ffmpegthumbnailer libdvdcss gimp guvcview imagemagick flac faad2 faac mjpegtools x265 x264 lame sox mencoder

Networking
pacman -Sy --needed b43-fwcutter broadcom-wl-dkms intel-ucode ipw2100-fw ipw2200-fw net-tools networkmanager networkmanager-openvpn nm-connection-editor network-manager-applet wget curl wireless_tools nfs-utils nilfs-utils dhclient dnsmasq dmraid dnsutils openvpn openssh openssl whois iwd avahi openresolv vsftpd

Fonts & Themes
pacman -Sy --needed ttf-ubuntu-font-family ttf-dejavu ttf-bitstream-vera ttf-liberation noto-fonts ttf-roboto ttf-opensans opendesktop-fonts cantarell-fonts freetype2 papirus-icon-theme

Printing
pacman -Sy --needed system-config-printer foomatic-db foomatic-db-engine gutenprint hplip simple-scan cups cups-pdf cups-filters cups-pk-helper ghostscript gsfonts python-pillow python-pyqt5 python-pip python-reportlab

18.2 pacman -S virtualbox-guest-utils
18.3 pacman -S plasma-desktop plasma-meta kde-gtk-config konsole dolphin kwrite okular sddm bluez bluez-utils gwenview packagekit-qt5 sddm-kcm

19-  Activar servicios
19.1 systemctl enable NetworkManager
19.2 systemctl enable sddm.service
19.3 systemctl enable bluetooth.service

LXQt Desktop
pacman -Sy --needed lxqt openbox obconf-qt pcmanfm-qt lxqt-sudo sddm breeze-icons qterminal kwrite partitionmanager networkmanager-qt qbittorrent pavucontrol-qt quodlibet kdenlive k3b xarchiver galculator polkit-qt5 packagekit-qt5

Plasma Desktop
pacman -Sy --needed plasma sddm breeze-icons kwrite partitionmanager qbittorrent pavucontrol-qt quodlibet print-manager sweeper dolphin kdenlive k3b ark konsole gwenview okular kcalc packagekit-qt5


Xfce Desktop
pacman -Sy --needed xfce4 xfce4-goodies sddm galculator gparted transmission-gtk pavucontrol xfburn asunder libburn libisofs libisoburn quodlibet pitivi xarchiver arc-gtk-theme arc-icon-theme gtk-engine-murrine adapta-gtk-theme polkit-gnome gnome-disk-utility gufw gnome-packagekit

Mate Desktop
pacman -Sy --needed mate mate-extra mate-applet-dock sddm adapta-gtk-theme arc-gtk-theme arc-icon-theme gtk-engine-murrine gparted transmission-gtk brasero asunder quodlibet pitivi gnome-disk-utility gufw mate-polkit gnome-packagekit

Cinnamon Desktop
pacman -Sy --needed cinnamon cinnamon-translations gnome-terminal adwaita-icon-theme adapta-gtk-theme arc-gtk-theme arc-icon-theme gtk-engine-murrine gnome-keyring sddm nemo nemo-share xed file-roller nemo-fileroller tmux tldr gparted transmission-gtk brasero asunder quodlibet pitivi gnome-disk-utility gufw polkit-gnome gnome-packagekit evince viewnior


F. enable services
systemctl enable sddm.service
systemctl enable org.cups.cupsd.service
systemctl enable NetworkManager

G. reboot

20.0 kde plasma
20.1 exit
20.2 umount -R /mnt
20.3 reboot
 
https://wiki.archlinux.org/


----------------------------

After install things to do:

----------------------------

1. Sync repositories, Install Reflector and Create mirrorlist
pacman -Syy
pacman -Sy reflector
reflector --country 'Spain' --age 15 --protocol https --sort rate --save /etc/pacman.d/mirrorlist


2. Automatically clean the package cache using pacman hooks:

Create a file /etc/pacman.d/hooks/clean_package_cache.hook:

$ sudo mkdir /etc/pacman.d/hooks
$ sudo nano /etc/pacman.d/hooks/clean_package_cache.hook

Add the following lines:

[Trigger]
Operation = Upgrade
Operation = Install
Operation = Remove
Type = Package
Target = *
[Action]
Description = Cleaning pacman cache...
When = PostTransaction
Exec = /usr/bin/paccache -rk 1

Save and close the file. 


3. Pacman can update all packages on the system with just one command. This could take quite a while depending on how up-to-date the system is. The following command synchronizes the repository databases and updates the system's packages, excluding "local" packages that are not in the configured repositories:

# pacman -Syu

Avoid doing partial upgrades. In other words, never run pacman -Sy; instead, always use pacman -Syu. Do not use pacman -Sy package, always upgrade (with pacman -Syu) before installing a package. If experiencing trouble after an update, double-check pacman's output by looking at /var/log/pacman.log. 


4. After upgrading you may now have packages that are no longer needed or that are no longer in the official repositories. 
To list all packages no longer required as dependencies (orphans):

$ pacman -Qdt

The list of explicitly-installed packages can be shown with pacman -Qe, while the complementary list of dependencies can be shown with pacman -Qd. 

To change the installation reason of an already installed package, execute:
 
# pacman -D --asdeps package_name

Use --asexplicit to do the opposite operation.


5. Package cache
Remove unwanted .pkg files from /var/cache/pacman/pkg/ to free up disk space. It is necessary to deliberately clean up the cache periodically to prevent the folder to grow indefinitely in size. 

The paccache script, provided within the pacman-contrib package, deletes all cached versions of installed and uninstalled packages, except for the most recent 3, by default:

# paccache -r

You can also define how many recent versions you want to keep. To retain only one past version use:

# paccache -rk1

Add the u switch to limit the action of paccache to uninstalled packages. For example to remove all cached versions of uninstalled packages, use the following:

# paccache -ruk0

To remove all the cached packages that are not currently installed, and the unused sync database, execute:

# pacman -Sc

To remove all files from the cache, use the clean switch twice, this is the most aggressive approach and will leave nothing in the cache folder:

# pacman -Scc


6. To keep the home directory clean from temporary files created at the wrong place, it is a good idea to manage a list of unwanted files and remove them regularly, for example with rmshit.py ( https://github.com/lahwaacz/Scripts/blob/master/rmshit.py ). rmlint can be used to find and optionally remove duplicate files, empty files, recursive empty directories and broken symlinks.

7. To quickly list all the broken symlinks of your system, use:

# find / -xtype l -print

Then inspect and remove unnecessary entries from this list.


8. Backup the pacman database
The following command can be used to backup the local pacman database:

$ tar -cjf pacman_database.tar.bz2 /var/lib/pacman/local

Store the backup pacman database file on one or more offline media, such as a USB stick, external hard drive, or CD-R.

The database can be restored by moving the pacman_database.tar.bz2 file into the / directory and executing the following command:

# tar -xjvf pacman_database.tar.bz2


9. Backup for directories

rsync -avp --delete /home/username/my_files /location/my_files

-a 
archive preserves permissions, ownership (UID), group (GID), and timestamps

-v
verbose output

-p progress indicator

--delete 
files deleted on the source are to be deleted on the backup



